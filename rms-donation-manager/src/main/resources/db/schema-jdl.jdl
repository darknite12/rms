entity Address {
	address String,
    address2 String,
    poBox String,
    city String,
    province String,
    postalCode String
    country String
}

entity Receipt {
	receiptNumber String unique,
    amount Float,
    year Integer,
    taxReceiptName String,
    numberOfTickets Integer,
    firstOfYear Integer,
    info TextBlob   
}

entity Organization {
	name String required
}

entity Person {
	title String,
    firstName String required,
    lastName String required,
    spouse String,
    contactPerson String,
    homePhoneNumber String,
    cellPhoneNumber String,
    workPhoneNumber String,
    faxNumber String,
    email String,
    language String,
    parish String,
    community String,
    benefactorStatus String,
    info TextBlob
}

entity Donation {
	amount Float required,
    year Integer required,
    formOfPayment String,
    donationInKind Boolean,
    info TextBlob
}

entity TicketPrice {
    price Float required,
    cost Float required,
    year Integer required
}

entity Event {
    name String required,
    year Integer required,
    venue String,
    address String,
    mastersOfCeremony String
}

entity SittingTable {
    name String,
    number String,
    year Integer,
    peoplePerTable Integer
}

entity Ticket {
    ticketNumber String required,
    year Integer required,
    soldBy String,
    formOfPayment FormOfPayment,
    isPaid Boolean,
    isAtEvent Boolean,
    info TextBlob
}

enum FormOfPayment {
    CASH,
    CHEQUE,
    CREDIT,
    FREE
}

relationship ManyToOne {
    Donation{person(firstName)} to Person,
    Donation{organization(name)} to Organization,
    Donation{receipt(receiptNumber)} to Receipt,
    SittingTable{event(name)} to Event,
    Ticket{person(firstName)} to Person,
    Ticket{organization(name)} to Organization,
    Ticket{receipt(receiptNumber)} to Receipt,
    Ticket{sittingTable(name)} to SittingTable,
    Ticket{event(name)} to Event,
    Ticket{ticketPrice(price)} to TicketPrice
}

relationship ManyToMany {
	Person{organization(name)} to Organization{person}
    Organization{address(address)} to Address{organization}
    Person{address(address)} to Address{Person}
}
